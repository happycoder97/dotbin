#!/bin/python

import os, sys, subprocess

# Executable names and args global vars
DMENU = "dmenu"
DMENU_OPTS = ['-i','-l','5']
DMENU_OPTS.extend(sys.argv[1:])

FIND = "find"

OPEN_CMD = "smplayer"

#The list of folders to search for
YTDL_DIRS = [
        "/home/farzeen/MyDownloaders",
        # "/mnt/gallery/MyDownloaders"
        ]

def dmenu(prompt=None, extra_opts=None, input=None):
    cmd = [DMENU]
    if prompt is not None: cmd.extend(['-p',prompt])
    if DMENU_OPTS is not None: cmd.extend(DMENU_OPTS)
    if extra_opts is not None: cmd.extend(extra_opts)

    process = subprocess.Popen(cmd,
            stdout=subprocess.PIPE,
            stdin=subprocess.PIPE,universal_newlines=True)

    (stdout,stderr) = process.communicate(input=input)
    return process.returncode,stdout,stderr


def find(path,iname=None):
    cmd=[FIND]
    cmd.extend(path)
    if iname is not None: cmd.extend(["-iname",iname])

    process = subprocess.Popen(cmd,stdout=subprocess.PIPE,universal_newlines=True)

    (stdout,stderr) = process.communicate()
    return process.returncode,stdout,stderr

def open_file(file):
    cmd=[OPEN_CMD]
    cmd.append(file)
    process = subprocess.Popen(cmd)


for DIR in YTDL_DIRS:
    if not os.path.isdir(DIR):
        message = "%s is not a directory" % DIR
        dmenu(prompt=message,input="A")
        exit(1)

(returncode,files,err) = find(iname="*.mkv",path=YTDL_DIRS)

if returncode != 0:
    raise Exception("Find returned %d:%s" % returncode,err)
    exit(1)

files = files.split("\n")
files_mod=[]

for i in range(len(files)):
    files_mod.append("[%d] %s" % (i, files[i][files[i].rfind(os.sep)+1:]))

(ret_code,selected_file,err) = dmenu(input="\n".join(files_mod))

if ret_code !=0:
    exit(1)

selected_file = selected_file.strip('\n')
index = int(selected_file[1:selected_file.find(']')])
selected_file_full_path = files[index]
open_file(selected_file_full_path)


